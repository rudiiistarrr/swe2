-- BEGIN TABLE ANGEBOTE
CREATE TABLE ANGEBOTE
(
   ID          INTEGER     NOT NULL GENERATED ALWAYS AS IDENTITY (START WITH 1, INCREMENT BY 1),
   SUMME       NUMERIC(5)  NOT NULL,
   DAUER       INTEGER,
   DATUM       DATE        NOT NULL,
   FK_KUNDENID INTEGER     NOT NULL,
   PRIMARY KEY(ID)
);

-- END TABLE ANGEBOTE

-- BEGIN TABLE AUSGANGSRECHNUNG
CREATE TABLE AUSGANGSRECHNUNG
(
   ID          INTEGER  NOT NULL GENERATED ALWAYS AS IDENTITY (START WITH 1, INCREMENT BY 1),
   FK_KUNDENID INTEGER  NOT NULL,
   PRIMARY KEY(ID)
);

-- END TABLE AUSGANGSRECHNUNG

-- BEGIN TABLE AUSGANGSRECHNUNGBANKKONTO
CREATE TABLE AUSGANGSRECHNUNGBANKKONTO
(
   BANKKONTOID        INTEGER  NOT NULL,
   AUSGANGSRECHNUNGID INTEGER  NOT NULL
);

-- END TABLE AUSGANGSRECHNUNGBANKKONTO

-- BEGIN TABLE AUSGANGSRECHNUNG_ZEILEN
CREATE TABLE AUSGANGSRECHNUNG_ZEILEN
(
   ID                    INTEGER  NOT NULL GENERATED ALWAYS AS IDENTITY (START WITH 1, INCREMENT BY 1),
   ZEILENNR              INTEGER  NOT NULL,
   FK_AUSGANGSRECHNUNGID INTEGER  NOT NULL,
   FK_ANGEBOTID          INTEGER  NOT NULL,
   PRIMARY KEY(ID)
);

-- END TABLE AUSGANGSRECHNUNG_ZEILEN

-- BEGIN TABLE BANKKONTO
CREATE TABLE BANKKONTO
(
   ID     INTEGER     NOT NULL GENERATED ALWAYS AS IDENTITY (START WITH 1, INCREMENT BY 1),
   BETRAG NUMERIC(5)  NOT NULL,
   PRIMARY KEY(ID)
);

-- END TABLE BANKKONTO

-- BEGIN TABLE EINGANGSRECHNUNG
CREATE TABLE EINGANGSRECHNUNG
(
   ID           INTEGER  NOT NULL GENERATED ALWAYS AS IDENTITY (START WITH 1, INCREMENT BY 1),
   SCANID       INTEGER  NOT NULL,
   FK_KONTAKTID INTEGER  NOT NULL,
   PRIMARY KEY(ID)
);

-- END TABLE EINGANGSRECHNUNG

-- BEGIN TABLE EINGANGSRECHNUNGBANKKONTO
CREATE TABLE EINGANGSRECHNUNGBANKKONTO
(
   BANKKONTOID        INTEGER  NOT NULL,
   EINGANGSRECHNUNGID INTEGER  NOT NULL
);


-- END TABLE EINGANGSRECHNUNGBANKKONTO

-- BEGIN TABLE KATEGORIE
CREATE TABLE KATEGORIE
(
   ID   INTEGER       NOT NULL GENERATED ALWAYS AS IDENTITY (START WITH 1, INCREMENT BY 1),
   NAME VARCHAR(254)  NOT NULL,
   PRIMARY KEY(ID)
);

-- END TABLE KATEGORIE

-- BEGIN TABLE KATEGORIEBANKKONTO
CREATE TABLE KATEGORIEBANKKONTO
(
   KATEGORIEID INTEGER  NOT NULL,
   BANKKONTOID INTEGER  NOT NULL
);


-- END TABLE KATEGORIEBANKKONTO

-- BEGIN TABLE KONTAKTE
CREATE TABLE KONTAKTE
(
   ID   INTEGER       NOT NULL GENERATED ALWAYS AS IDENTITY (START WITH 1, INCREMENT BY 1),
   NAME VARCHAR(254)  NOT NULL,
   PRIMARY KEY(ID)
);

-- END TABLE KONTAKTE

-- BEGIN TABLE KUNDEN
CREATE TABLE KUNDEN
(
   ID   INTEGER       NOT NULL GENERATED ALWAYS AS IDENTITY (START WITH 1, INCREMENT BY 1),
   NAME VARCHAR(254)  NOT NULL,
   PRIMARY KEY(ID)
);

-- END TABLE KUNDEN

-- BEGIN TABLE PROJEKTE
CREATE TABLE PROJEKTE
(
   ID   INTEGER       NOT NULL GENERATED ALWAYS AS IDENTITY (START WITH 1, INCREMENT BY 1),
   NAME VARCHAR(254)  NOT NULL,
   PRIMARY KEY(ID)
);

-- END TABLE PROJEKTE

-- BEGIN TABLE PROJEKTEANGEBOTE
CREATE TABLE PROJEKTEANGEBOTE
(
   PROJEKTID INTEGER  NOT NULL,
   ANGEBOTID INTEGER  NOT NULL
);

-- END TABLE PROJEKTEANGEBOTE

-- BEGIN TABLE ZEITERFASSUNG
CREATE TABLE ZEITERFASSUNG
(
   ID    INTEGER     NOT NULL GENERATED ALWAYS AS IDENTITY (START WITH 1, INCREMENT BY 1),
   DAUER NUMERIC(5)  NOT NULL,
   PRIMARY KEY(ID)
);

-- END TABLE ZEITERFASSUNG

-- FOREIGN KEYS
ALTER TABLE Angebote
ADD FOREIGN KEY (fk_KundenID)
REFERENCES Kunden(ID);

ALTER TABLE Ausgangsrechnung_Zeilen
ADD FOREIGN KEY (fk_AusgangsrechnungID)
REFERENCES Ausgangsrechnung(ID);

ALTER TABLE Ausgangsrechnung_Zeilen
ADD FOREIGN KEY (fk_AngebotID)
REFERENCES Angebote(ID);

ALTER TABLE Ausgangsrechnung
ADD FOREIGN KEY (fk_KundenID)
REFERENCES Kunden(ID);

ALTER TABLE Eingangsrechnung
ADD FOREIGN KEY (fk_KontaktID)
REFERENCES Kontakte(ID);

ALTER TABLE ProjekteAngebote
ADD FOREIGN KEY (AngebotID)
REFERENCES Angebote(ID);

ALTER TABLE ProjekteAngebote
ADD FOREIGN KEY (ProjektID)
REFERENCES Projekte(ID);

ALTER TABLE AusgangsrechnungBankkonto
ADD FOREIGN KEY (BankkontoID)
REFERENCES Bankkonto(ID);

ALTER TABLE AusgangsrechnungBankkonto
ADD FOREIGN KEY (AusgangsrechnungID)
REFERENCES Ausgangsrechnung(ID);

ALTER TABLE EingangsrechnungBankkonto
ADD FOREIGN KEY (BankkontoID)
REFERENCES Bankkonto(ID);

ALTER TABLE EingangsrechnungBankkonto
ADD FOREIGN KEY (EingangsrechnungID)
REFERENCES Eingangsrechnung(ID);

ALTER TABLE KategorieBankkonto
ADD FOREIGN KEY (BankkontoID)
REFERENCES Bankkonto(ID);

ALTER TABLE KategorieBankkonto
ADD FOREIGN KEY (KategorieID)
REFERENCES Kategorie(ID);




























